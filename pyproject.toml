[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "promptcraft"
version = "3.0.1"
description = "Neural Prompt Enhancement System - AI prompt optimization tool with multiple interfaces"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "PromptCraft Team", email = "team@promptcraft.dev"}
]
maintainers = [
    {name = "PromptCraft Team", email = "team@promptcraft.dev"}
]
keywords = [
    "ai", "prompt", "enhancement", "gpt", "claude", "neural", "optimization",
    "llm", "chatgpt", "artificial-intelligence", "prompt-engineering"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Utilities",
    "Typing :: Typed"
]
requires-python = ">=3.9"
dependencies = [
    "pyperclip>=1.8.2",
    "python-dotenv>=1.0.0",
    "jsonschema>=4.19.0",
    "pydantic>=2.3.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-timeout>=2.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "bandit[toml]>=1.7.5",
    "pre-commit>=3.4.0"
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-timeout>=2.1.0"
]
security = [
    "bandit[toml]>=1.7.5"
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0"
]

[project.urls]
Homepage = "https://github.com/blackarched/Prompt-Kraft"
Repository = "https://github.com/blackarched/Prompt-Kraft"
Documentation = "https://github.com/blackarched/Prompt-Kraft/tree/main/docs"
"Bug Tracker" = "https://github.com/blackarched/Prompt-Kraft/issues"
Changelog = "https://github.com/blackarched/Prompt-Kraft/releases"

[project.scripts]
promptcraft = "prompt_craft:main"
prompt-craft = "prompt_craft:main"

[tool.setuptools]
py-modules = ["prompt_craft"]

[tool.setuptools.packages.find]
where = ["."]
include = ["prompt_craft*"]
exclude = ["tests*", "docs*", "build*", "dist*"]

# Black formatting configuration
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=prompt_craft",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security-related"
]

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "pyperclip",
    "dotenv"
]
ignore_missing_imports = true

# Bandit security configuration
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101"]  # Skip assert_used test

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]

# Coverage configuration
[tool.coverage.run]
source = ["prompt_craft"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.coverage.html]
directory = "htmlcov"

# Flake8 configuration (in setup.cfg format, but documented here)
# Create setup.cfg with:
# [flake8]
# max-line-length = 88
# extend-ignore = E203, W503
# exclude = .git,__pycache__,build,dist,.venv,venv

# Pre-commit configuration would go in .pre-commit-config.yaml